{"version":3,"sources":["components/SnapshotForm.jsx","components/AllSnapshots.jsx","components/OneSnapshotDetails.jsx","components/UpdateSnapshot.jsx","App.js","reportWebVitals.js","index.js"],"names":["SnapshotForm","props","useState","title","name","description","photo","formInfo","setFormInfo","formErrors","setFormErrors","changeHandler","e","console","log","target","type","files","value","className","onSubmit","preventDefault","formData","FormData","append","axios","post","then","response","data","err","errors","setFormSubmitted","formSubmitted","catch","enctype","htmlFor","onChange","id","message","rows","cols","accept","AllSnapshots","allSnapshots","setAllSnapshots","deleteToggle","searchterm","setSearchterm","useEffect","get","placeholder","filter","snapshot","i","toLowerCase","includes","map","style","backgroundImage","backgroundSize","backgroundRepeat","to","_id","OneSnapshotDetails","useParams","history","useHistory","snapshotDetails","setSnapshotDetails","src","alt","height","onClick","delete","push","UpdateSnapshot","put","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAuHeA,EAnHM,SAACC,GAAW,IAAD,MAO5B,EAAgCC,mBAAS,CACrCC,MAAO,GACPC,KAAM,GACNC,YAAa,GACbC,MAAO,KAJX,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,EAAoCN,mBAAS,CACzCC,MAAO,GACPC,KAAM,GACNC,YAAa,KAHjB,mBAAOI,EAAP,KAAmBC,EAAnB,KAMMC,EAAgB,SAACC,GACnBC,QAAQC,IAAI,kBACU,SAAlBF,EAAEG,OAAOC,KACTR,EAAY,2BACLD,GADI,kBAENK,EAAEG,OAAOX,KAAOQ,EAAEG,OAAOE,MAAM,MAGpCT,EAAY,2BACLD,GADI,kBAENK,EAAEG,OAAOX,KAAOQ,EAAEG,OAAOG,UAmDtC,OACI,qBAAKC,UAAU,OAAf,SACI,uBAAMA,UAAU,eAAeC,SAhDjB,SAACR,GACnBA,EAAES,iBAEF,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASjB,EAASJ,OAClCmB,EAASE,OAAO,OAAQjB,EAASH,MACjCkB,EAASE,OAAO,cAAejB,EAASF,aACxCiB,EAASE,OAAO,QAASjB,EAASD,OAElCO,QAAQC,IAAI,cACZD,QAAQC,IAAIP,GACZkB,IAAMC,KAAK,4CAA6CJ,GACnDK,MAAK,SAAAC,GACFf,QAAQC,IAAIc,GAERA,EAASC,KAAKC,IAEdpB,EAAckB,EAASC,KAAKC,IAAIC,SAEhC9B,EAAM+B,kBAAkB/B,EAAMgC,eAK9BzB,EAAY,CACRL,MAAO,GACPC,KAAM,GACNC,YAAa,GACbC,MAAO,OAGXI,EAAc,CACVP,MAAO,GACPC,KAAM,GACNC,YAAa,SAIxB6B,OAAM,SAAAJ,GAAG,OAAIjB,QAAQC,IAAI,uCAAqCgB,OAUPK,QAAQ,sBAAhE,UACI,mDACA,sBAAKhB,UAAU,aAAf,UACI,uBAAOiB,QAAQ,QAAf,oBACA,uBAAOC,SAAU1B,EAAeQ,UAAU,eAAef,KAAK,QAAQY,KAAK,OAAOsB,GAAG,QAAQpB,MAAOX,EAASJ,QAC7G,mBAAGgB,UAAU,cAAb,mBAA4BV,EAAWN,aAAvC,aAA4B,EAAkBoC,aAGlD,sBAAKpB,UAAU,aAAf,UACI,uBAAOiB,QAAQ,OAAf,yBACA,uBAAOC,SAAU1B,EAAeQ,UAAU,eAAef,KAAK,OAAOY,KAAK,OAAOsB,GAAG,OAAOpB,MAAOX,EAASH,OAC3G,mBAAGe,UAAU,cAAb,mBAA4BV,EAAWL,YAAvC,aAA4B,EAAiBmC,aAGjD,sBAAKpB,UAAU,aAAf,UACI,uBAAOiB,QAAQ,cAAf,0BACA,0BAAUC,SAAU1B,EAAeQ,UAAU,eAAemB,GAAG,cAAclC,KAAK,cAAcoC,KAAK,IAAIC,KAAK,KAAKvB,MAAOX,EAASF,cAEnI,mBAAGc,UAAU,cAAb,mBAA4BV,EAAWJ,mBAAvC,aAA4B,EAAwBkC,aAExD,sBAAKpB,UAAU,aAAf,UACI,uBAAOiB,QAAQ,QAAf,gCACA,uBAAOC,SAAU1B,EAAeQ,UAAU,eAAeH,KAAK,OAAO0B,OAAO,oBAAoBtC,KAAK,aAEzG,wBAAQY,KAAK,SAASG,UAAU,uBAAhC,0BCdDwB,EA9FM,SAAC1C,GAElB,MAAwCC,mBAAS,IAAjD,mBAAO0C,EAAP,KAAqBC,EAArB,KACA,EAAwC3C,mBAAS,IAAjD,mBACA,GADA,UACwCA,oBAAS,IAAjD,mBAAO4C,EAAP,KAGA,GAHA,KAGoC5C,mBAAS,KAA7C,mBAAO6C,EAAP,KAAmBC,EAAnB,KASAC,qBAAU,WACNxB,IAAMyB,IAAI,sCACLvB,MAAK,SAAAC,GACFf,QAAQC,IAAI,4CAA0Cc,GACtDf,QAAQC,IAAIc,EAASC,MACrBgB,EAAgBjB,EAASC,SAE5BK,OAAM,SAAAJ,GAAG,OAAIjB,QAAQC,IAAI,QAASgB,QACxC,CAAC7B,EAAMgC,cAAea,IAwBzB,OACI,qCACI,qBAAK3B,UAAU,aAAf,SACI,+BACI,sBAAKA,UAAU,aAAf,UACI,uBAAOiB,QAAQ,SAAf,qBACA,uBAAOC,SAhBT,SAACzB,GACfC,QAAQC,IAAI,WACZkC,EAAcpC,EAAEG,OAAOG,OACvBL,QAAQC,IAAIiC,IAagC/B,KAAK,OAAOsB,GAAG,SAASlC,KAAK,SAAS+C,YAAY,iCAI1F,qBAAKhC,UAAU,YAAf,SAEI,qBAAKA,UAAU,0CAAf,SACI,qBAAKA,UAAU,MAAf,SAEKyB,EAAaQ,QAAO,SAACC,EAAUC,GAC5B,OAAOD,EAASlD,MAAMoD,cAAcC,SAAST,EAAWQ,kBAEvDE,KAAI,SAACJ,EAAUC,GACZ,OACI,mCACI,qBAAKnC,UAAU,OAAOuC,MAAO,CAAEC,gBAAgB,6BAAD,OAA+BN,EAAS/C,MAAxC,KAAkDsD,eAAgB,QAASC,iBAAkB,aAA3I,SACI,cAAC,IAAD,CAAcC,GAAE,uBAAkBT,EAASU,KAA3C,SACI,sBAAK5C,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BkC,EAASlD,QACrC,uBAFJ,uDAEiE,qBAAIgB,UAAU,gBAAd,iBAAmCkC,EAASjD,YAHtGkD,oBC5BxCU,EAzCY,WACvB,IAAQ1B,EAAO2B,cAAP3B,GACF4B,EAAUC,cAEhB,EAA8CjE,mBAAS,IAAvD,mBAAOkE,EAAP,KAAwBC,EAAxB,KAGApB,qBAAU,WACNxB,IAAMyB,IAAN,6CAAgDZ,IAC3CX,MAAK,SAAAC,GACFf,QAAQC,IAAI,mDAAoDc,GAChEyC,EAAmBzC,EAASC,KAAK,OAGpCK,OAAM,SAAAJ,GAAG,OAAIjB,QAAQC,IAAI,OAAQgB,QACvC,IAYH,OACI,qBAAKX,UAAU,UAAf,SACI,sBAAKA,UAAU,cAAf,UACI,6BAAKiD,EAAgBjE,QACrB,6CAAgBiE,EAAgBhE,QAChC,qBAAKkE,IAAG,gCAA2BF,EAAgB9D,OAASiE,IAAI,QAAQC,OAAO,UAC/E,8CAAiBJ,EAAgB/D,eACjC,yBAAQoE,QAjBG,SAAC7D,GACpBC,QAAQC,IAAI,cACZW,IAAMiD,OAAN,oDAA0DpC,IACrDX,MAAK,SAAAC,GACFf,QAAQC,IAAI,4BAA6Bc,GACzCsC,EAAQS,KAAK,QAEhBzC,OAAM,SAAAJ,GAAG,OAAIjB,QAAQC,IAAIgB,OAUWX,UAAU,iBAA3C,oBAAoEiD,EAAgBjE,SACpF,eAAC,IAAD,CAAMgB,UAAU,eAAe2C,GAAE,+BAA0BM,EAAgBL,KAA3E,kBAAwFK,EAAgBjE,eCsFzGyE,EAxHQ,SAAC3E,GAAW,IAAD,MAItBqC,EAAO2B,cAAP3B,GACF4B,EAAUC,cAGhB,EAAgCjE,mBAAS,CACrCC,MAAO,GACPC,KAAM,GACNC,YAAa,KAHjB,mBAAOE,EAAP,KAAiBC,EAAjB,KAMA,EAA8CN,mBAAS,IAAvD,mBAAwBmE,GAAxB,WAEA,EAAoCnE,mBAAS,CACzCC,MAAO,GACPC,KAAM,GACNC,YAAa,KAHjB,mBAAOI,EAAP,KAAmBC,EAAnB,KAMAuC,qBAAU,WACNxB,IAAMyB,IAAN,6CAAgDZ,IAC3CX,MAAK,SAAAC,GACFf,QAAQC,IAAI,mDAAoDc,GAChEpB,EAAYoB,EAASC,KAAK,IAC1BwC,EAAmBzC,EAASC,KAAK,OAEpCK,OAAM,SAAAJ,GAAG,OAAIjB,QAAQC,IAAI,OAAQgB,QACvC,IAEH,IAAMnB,EAAgB,SAACC,GACnBC,QAAQC,IAAI,sBACZN,EAAY,2BACLD,GADI,kBAENK,EAAEG,OAAOX,KAAOQ,EAAEG,OAAOG,UA6ClC,OACI,qBAAKC,UAAU,YAAf,SAEI,qBAAKA,UAAU,OAAf,SACI,uBAAMA,UAAU,eAAeC,SA5CrB,SAACR,GACnBA,EAAES,iBAEF,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASjB,EAASJ,OAClCmB,EAASE,OAAO,OAAQjB,EAASH,MACjCkB,EAASE,OAAO,cAAejB,EAASF,aACxCiB,EAASE,OAAO,QAASjB,EAASD,OAElCO,QAAQC,IAAI,wBACZD,QAAQC,IAAIP,GAEZkB,IAAMoD,IAAN,oDAAuDvC,GAAM/B,GACxDoB,MAAK,SAAAC,GACFf,QAAQC,IAAIc,GAERA,EAASC,KAAKC,IAEdpB,EAAckB,EAASC,KAAKC,IAAIC,SAEhC9B,EAAM+B,kBAAkB/B,EAAMgC,eAE9BzB,EAAY,CACRL,MAAO,GACPC,KAAM,GACNC,YAAa,KAGjBK,EAAc,CACVP,MAAO,GACPC,KAAM,GACNC,YAAa,KAEjB6D,EAAQS,KAAK,SAIpBzC,OAAM,SAAAJ,GAAG,OAAIjB,QAAQC,IAAI,uCAAqCgB,OAO3D,UACI,iDACA,sBAAKX,UAAU,aAAf,UACI,uBAAOiB,QAAQ,QAAf,mBACA,uBAAOC,SAAU1B,EAAeP,KAAK,QAAQY,KAAK,OAAOsB,GAAG,QAAQpB,MAAOX,EAASJ,QACpF,mBAAGgB,UAAU,cAAb,mBAA4BV,EAAWN,aAAvC,aAA4B,EAAkBoC,aAGlD,sBAAKpB,UAAU,aAAf,UACI,uBAAOiB,QAAQ,OAAf,yBACA,uBAAOC,SAAU1B,EAAeP,KAAK,OAAOY,KAAK,OAAOsB,GAAG,OAAOpB,MAAOX,EAASH,OAClF,mBAAGe,UAAU,cAAb,mBAA4BV,EAAWL,YAAvC,aAA4B,EAAiBmC,aAGjD,sBAAKpB,UAAU,aAAf,UACI,uBAAOiB,QAAQ,cAAf,yBACA,0BAAUC,SAAU1B,EAAe2B,GAAG,cAAclC,KAAK,cAAcoC,KAAK,IAAIC,KAAK,KAAKvB,MAAOX,EAASF,cAE1G,mBAAGc,UAAU,cAAb,mBAA4BV,EAAWJ,mBAAvC,aAA4B,EAAwBkC,aAGxD,qBAAK+B,IAAG,gCAA2B/D,EAASD,OAASiE,IAAI,QAAQC,OAAO,UACxE,sBAAKrD,UAAU,aAAf,UACI,uBAAOiB,QAAQ,QAAf,gCACA,uBAAOC,SAAU1B,EAAeK,KAAK,OAAO0B,OAAO,oBAAoBtC,KAAK,aAEhF,wBAAQY,KAAK,SAASG,UAAU,uBAAhC,oBACA,cAAC,IAAD,CAAMA,UAAU,uBAAuB2C,GAAG,IAA1C,0BCrELgB,MApCf,WAEE,MAA0C5E,oBAAS,GAAnD,mBAAO+B,EAAP,KAAsBD,EAAtB,KAEA,OACE,cAAC,IAAD,UACE,sBAAKb,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAAM2C,GAAG,IAAT,SAAc,8CAEhB,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAlB,SACE,sBAAK7D,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,CAAcc,cAAeA,MAE/B,qBAAKd,UAAU,WAAf,SACE,cAAC,EAAD,CAAcc,cAAeA,EAAeD,iBAAkBA,WAKpE,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,oBAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,2BAAlB,SACE,cAAC,EAAD,CAAgB/C,cAAeA,EAAeD,iBAAkBA,eC7B7DiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxD,MAAK,YAAkD,IAA/CyD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2a43042f.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Link, useHistory } from 'react-router-dom';\n\nconst SnapshotForm = (props) => {\n\n\n    // state of card inpfo\n\n\n    //must match model as well as name tag on form inputs\n    const [formInfo, setFormInfo] = useState({\n        title: \"\",\n        name: \"\",\n        description: \"\",\n        photo: \"\"\n    })\n\n    //to store the form validation errors we get\n    const [formErrors, setFormErrors] = useState({\n        title: \"\",\n        name: \"\",\n        description: \"\"\n    })\n\n    const changeHandler = (e) => {\n        console.log(\"Changing form!\")\n        if (e.target.type === \"file\") {\n            setFormInfo({\n                ...formInfo,\n                [e.target.name]: e.target.files[0]\n            })\n        } else {\n            setFormInfo({\n                ...formInfo,\n                [e.target.name]: e.target.value\n            })\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('title', formInfo.title)\n        formData.append('name', formInfo.name)\n        formData.append('description', formInfo.description)\n        formData.append('photo', formInfo.photo)\n\n        console.log(\"submitting\")\n        console.log(formInfo)\n        axios.post(\"http://localhost:8000/api/snapshot/create\", formData)\n            .then(response => {\n                console.log(response)\n\n                if (response.data.err) {\n                    //if not filled out properly\n                    setFormErrors(response.data.err.errors)\n                } else {\n                    props.setFormSubmitted(!props.formSubmitted)\n                    // this was needed when the form was in same page as all ninjas so that when form submits we can toggle this variable on and off to make so that all ninjas re-renders with the new list of ninjas. \n                    //not needed when the form is on separate routes from form\n\n                    //clears form submission\n                    setFormInfo({\n                        title: \"\",\n                        name: \"\",\n                        description: \"\",\n                        photo: null\n                    })\n                    // clears form errors\n                    setFormErrors({\n                        title: \"\",\n                        name: \"\",\n                        description: \"\",\n                    })\n                }\n            })\n            .catch(err => console.log(\"error submitting post request -->\", err))\n    }\n\n    // useEffect(() => {\n    //     axios.get(idofclicked)\n\n\n    // }, [updatetoggle]);\n    return (\n        <div className=\"form\">\n            <form className=\"product-form\" onSubmit={submitHandler} enctype='multipart/form-data'>\n                <h2>Create a Snapshot</h2>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title:</label>\n                    <input onChange={changeHandler} className=\"form-control\" name=\"title\" type=\"text\" id=\"title\" value={formInfo.title} />\n                    <p className=\"text-danger\">{formErrors.title?.message}</p>\n\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Written By:</label>\n                    <input onChange={changeHandler} className=\"form-control\" name=\"name\" type=\"text\" id=\"name\" value={formInfo.name} />\n                    <p className=\"text-danger\">{formErrors.name?.message}</p>\n\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\" >Description:</label>\n                    <textarea onChange={changeHandler} className=\"form-control\" id=\"description\" name=\"description\" rows=\"4\" cols=\"20\" value={formInfo.description}>\n                    </textarea>\n                    <p className=\"text-danger\">{formErrors.description?.message}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"photo\">Upload a Snapshot:</label>\n                    <input onChange={changeHandler} className=\"form-control\" type=\"file\" accept=\".png, .jpg, .jpeg\" name=\"photo\" />\n                </div>\n                <button type=\"submit\" className=\"btn form-button mt-3\">Create</button>\n                {/* <Link to=\"/\" className=\"btn btn-primary mt-3\">Home</Link> */}\n            </form>\n        </div>\n    );\n};\n\nexport default SnapshotForm;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst AllSnapshots = (props) => {\n\n    const [allSnapshots, setAllSnapshots] = useState([]);\n    const [favSnapshots, setfavSnapshots] = useState([]);\n    const [deleteToggle, setDeleteToggle] = useState(false);\n\n    //state variable for searchbar\n    const [searchterm, setSearchterm] = useState(\"\");\n\n\n    const addFav = (e, i) => {\n        console.log(\"I like this one\")\n        console.log(i)\n        setfavSnapshots(i)\n    }\n    //As soon as the component loads up information about all products is fetched by axios and saved in our state variable without infinitely rendering the page.\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/snapshot\") //making api call to our backend route to get all\n            .then(response => {\n                console.log(\"response when getting all snapshots-->\", response)\n                console.log(response.data)\n                setAllSnapshots(response.data) //store the info about all the ninjas in our state variable\n            })\n            .catch(err => console.log(\"ERROR\", err))\n    }, [props.formSubmitted, deleteToggle])\n\n    //is being passed the id of the product where we are pressing the delete button\n    const deleteSnapshot = (e, idOfSnapshot) => {\n        console.log(\"deleting snapshot with this id\", idOfSnapshot)\n        axios.delete(`http://localhost:8000/api/snapshot/delete/${idOfSnapshot}`)\n            .then(response => {\n                console.log(\"response after deleting->\", response)\n                setDeleteToggle(!deleteToggle) //each time something gets deleted, we change this variable called deleteToggle to be the opposit of whiat it currently is (true->false) so that in the use effect dependency array it will trigger the axios call to get all ninjas. auto re-render. \n            })\n            .catch(err => console.log(err))\n    }\n\n\n    const logSearch = (e) => {\n        console.log(\"changed\")\n        setSearchterm(e.target.value)\n        console.log(searchterm)\n    }\n    // const updateSnapshot = (e, idOfSnapshot) => {\n    //     console.log(\"Hello\", idOfSnapshot)\n\n    // }\n\n    return (\n        <>\n            <div className=\"search-bar\">\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"search\">Search:</label>\n                        <input onChange={logSearch} type=\"text\" id=\"search\" name=\"search\" placeholder=\"Search for a snapshot\" />\n                    </div>\n                </form>\n            </div>\n            <div className=\"left-side\">\n\n                <div className=\"all-snapshots-container container-fluid\">\n                    <div className=\"row\">\n\n                        {allSnapshots.filter((snapshot, i) => {\n                            return snapshot.title.toLowerCase().includes(searchterm.toLowerCase())\n                        })\n                            .map((snapshot, i) => {\n                                return (\n                                    <>\n                                        <div className=\"card\" style={{ backgroundImage: `url(http://localhost:8000/${snapshot.photo})`, backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }} >\n                                            <Link key={i} to={`api/snapshot/${snapshot._id}`}>\n                                                <div className=\"card-body\">\n                                                    <h5 className=\"card-title\">{snapshot.title}</h5>\n                                                    <h4></h4>                                                    <h6 className=\"card-subtitle\">By: {snapshot.name}</h6>\n                                                    {/* <p className=\"card-text\">{snapshot.description}</p> */}\n                                                    {/* <img src={`http://localhost:8000/${snapshot.photo}`} alt=\"photo\" height=\"200px\" /> */}\n                                                    {/* <button className=\"btn btn-danger ml-3\" onClick={(e) => deleteproduct(e, i)}>Delete</button> */}\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        {/* <button onClick={(e) => addFav(e, snapshot._id)}>*</button> */}\n                                        {/* <button onClick={(e) => deleteSnapshot(e, snapshot._id)} className=\"btn btn-danger\">Delete</button> */}\n                                        {/* <button onClick={(e) => updateSnapshot(e, snapshot._id)}>Edit</button> */}\n                                    </>\n                                )\n                            })\n                        }\n                    </div>\n                </div >\n            </div>\n        </>\n    );\n};\n\nexport default AllSnapshots;","import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport axios from 'axios'\n\nconst OneSnapshotDetails = () => {\n    const { id } = useParams();\n    const history = useHistory(); //so we can redirect after clicking on delete\n\n    const [snapshotDetails, setSnapshotDetails] = useState({}) //a state variable to store information about the product that we get back from the api call.\n\n    //as soon as the product details component renders, make an api call to get one product by id, and store that product in a state variable without infinitely re-rendering the component\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/snapshot/${id}`)\n            .then(response => {\n                console.log(\"Response when trying to get one snapshot details\", response)\n                setSnapshotDetails(response.data[0])\n\n            })\n            .catch(err => console.log(\"ERR:\", err))\n    }, [])\n\n    const deleteSnapshot = (e) => {\n        console.log(\"delete you\")\n        axios.delete(`http://localhost:8000/api/snapshot/delete/${id}`)\n            .then(response => {\n                console.log(\"response after deleting->\", response)\n                history.push('/')\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div className=\"details\">\n            <div className=\"single-card\">\n                <h2>{snapshotDetails.title}</h2>\n                <p>Written By: {snapshotDetails.name}</p>\n                <img src={`http://localhost:8000/${snapshotDetails.photo}`} alt=\"photo\" height=\"400px\" />\n                <p>Description: {snapshotDetails.description}</p>\n                <button onClick={deleteSnapshot} className=\"btn btn-danger\">Delete {snapshotDetails.title}</button>\n                <Link className=\"btn btn-info\" to={`/api/snapshot/update/${snapshotDetails._id}`}>Edit {snapshotDetails.title}</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default OneSnapshotDetails;","import { Link, useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\n\n\nconst UpdateSnapshot = (props) => {\n    //combines concepts from showing details about one product and creating a product\n    //main difference is it sends a put request after getting the info for that product first\n\n    const { id } = useParams();\n    const history = useHistory();\n\n    //form info will be prepopulated\n    const [formInfo, setFormInfo] = useState({\n        title: \"\",\n        name: \"\",\n        description: \"\",\n    })\n\n    const [snapshotDetails, setSnapshotDetails] = useState({})\n\n    const [formErrors, setFormErrors] = useState({\n        title: \"\",\n        name: \"\",\n        description: \"\"\n    })\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/snapshot/${id}`)\n            .then(response => {\n                console.log(\"Response when trying to get one snapshot details\", response)\n                setFormInfo(response.data[0])\n                setSnapshotDetails(response.data[0])\n            })\n            .catch(err => console.log(\"ERR:\", err))\n    }, [])\n\n    const changeHandler = (e) => {\n        console.log(\"Changing the form!\")\n        setFormInfo({\n            ...formInfo,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('title', formInfo.title)\n        formData.append('name', formInfo.name)\n        formData.append('description', formInfo.description)\n        formData.append('photo', formInfo.photo)\n\n        console.log(\"Form info submitted!\")\n        console.log(formInfo)\n        //on submit axios call to backend route to update something. it is given an id and ifno to update it with (formInfo). \n        axios.put(`http://localhost:8000/api/snapshot/update/${id}`, formInfo)\n            .then(response => {\n                console.log(response)\n\n                if (response.data.err) {\n                    //if not filled out properly\n                    setFormErrors(response.data.err.errors)\n                } else {\n                    props.setFormSubmitted(!props.formSubmitted)\n\n                    setFormInfo({\n                        title: \"\",\n                        name: \"\",\n                        description: \"\",\n                    })\n\n                    setFormErrors({\n                        title: \"\",\n                        name: \"\",\n                        description: \"\",\n                    })\n                    history.push('/')\n                }\n                //com\n            })\n            .catch(err => console.log(\"error submitting post request -->\", err))\n    }\n\n    return (\n        <div className=\"container\">\n\n            <div className=\"form\">\n                <form className=\"product-form\" onSubmit={submitHandler}>\n                    <h2>Update Snapshot</h2>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input onChange={changeHandler} name=\"title\" type=\"text\" id=\"title\" value={formInfo.title} />\n                        <p className=\"text-danger\">{formErrors.title?.message}</p>\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Written By:</label>\n                        <input onChange={changeHandler} name=\"name\" type=\"text\" id=\"name\" value={formInfo.name} />\n                        <p className=\"text-danger\">{formErrors.name?.message}</p>\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description</label>\n                        <textarea onChange={changeHandler} id=\"description\" name=\"description\" rows=\"4\" cols=\"40\" value={formInfo.description}>\n                        </textarea>\n                        <p className=\"text-danger\">{formErrors.description?.message}</p>\n\n                    </div>\n                    <img src={`http://localhost:8000/${formInfo.photo}`} alt=\"photo\" height=\"400px\" />\n                    <div className=\"form-group\">\n                        <label htmlFor=\"photo\">Upload a Snapshot:</label>\n                        <input onChange={changeHandler} type=\"file\" accept=\".png, .jpg, .jpeg\" name=\"photo\" />\n                    </div>\n                    <button type=\"submit\" className=\"btn form-button mt-3\">Update</button>\n                    <Link className=\"btn btn-primary mt-3\" to=\"/\">Home</Link>\n\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default UpdateSnapshot;","import './App.css';\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter,\n  Route,\n  Link,\n  Switch\n} from \"react-router-dom\"\nimport SnapshotForm from './components/SnapshotForm';\nimport AllSnapshots from './components/AllSnapshots';\nimport OneSnapshotDetails from './components/OneSnapshotDetails';\nimport UpdateSnapshot from './components/UpdateSnapshot';\n\nfunction App() {\n\n  const [formSubmitted, setFormSubmitted] = useState(false)\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"header\">\n          <Link to=\"/\" ><h1>SnapShot</h1></Link>\n        </div>\n        <Switch>\n\n          <Route exact path=\"/\">\n            <div className=\"container\">\n              <div className=\"col-sm\">\n                <AllSnapshots formSubmitted={formSubmitted} />\n              </div>\n              <div className=\"col-lg-4\">\n                <SnapshotForm formSubmitted={formSubmitted} setFormSubmitted={setFormSubmitted} />\n              </div>\n            </div>\n          </Route>\n\n          <Route exact path=\"/api/snapshot/:id\">\n            <OneSnapshotDetails />\n          </Route>\n\n          <Route exact path=\"/api/snapshot/update/:id\">\n            <UpdateSnapshot formSubmitted={formSubmitted} setFormSubmitted={setFormSubmitted} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}